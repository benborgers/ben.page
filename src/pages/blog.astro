---
import { getCollection } from "astro:content";
import Layout from "../components/layout.astro";
import type { CollectionEntry } from "astro:content";
import { Code } from "astro:components";

const getPostDate = (post: CollectionEntry<"posts">) => {
  if ("noDate" in post.data) {
    throw new Error("Post displayed on /blog has no date");
  }

  return post.data.date;
};

const posts = (await getCollection("posts"))
  .filter((post) => !post.data.unlisted)
  .sort((a, b) => {
    return getPostDate(b).getTime() - getPostDate(a).getTime();
  });
---

<Layout title="Blog â€” Ben Borgers">
  <p class="text-right text-gray-400">
    Subscribe via
    <a
      href="https://buttondown.email/benborgers"
      target="_blank"
      class="underline decoration-gray-300">monthly newsletter</a
    >
    or
    <a href="/rss" target="_blank" class="underline decoration-gray-300"
      >RSS feed</a
    >.
  </p>

  <div>
    {
      posts.map((post, i) => {
        const yearMonth = (date: Date) => {
          return date.toLocaleString("en-US", {
            timeZone: "UTC",
            month: "numeric",
            year: "numeric",
          });
        };

        const differentDateFromPrevious =
          i === 0 ||
          yearMonth(getPostDate(post)) !== yearMonth(getPostDate(posts[i - 1]));

        return (
          <>
            {differentDateFromPrevious && (
              <p class="-mb-1 mt-6 font-handwriting text-gray-400 font-medium">
                {getPostDate(post).toLocaleString("en-US", {
                  timeZone: "UTC",
                  month: "long",
                  year: "numeric",
                })}
              </p>
            )}

            <p class="mt-2 font-serif text-xl underline decoration-gray-300">
              <a href={`/${post.slug}`}>{post.data.title}</a>
            </p>
          </>
        );
      })
    }
  </div>
</Layout>
